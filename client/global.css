/** @import must precede all other statements */
@import url("https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700;800&family=Poppins:wght@500;600;700&display=swap");

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  /**
   * Tailwind CSS theme
   * tailwind.config.ts expects the following color variables to be expressed as HSL values.
   */
  :root {
    /* Deep black base + soft white text */
    --background: 220 25% 3%;
    --foreground: 210 15% 96%;

    /* Surfaces */
    --card: 220 25% 6%;
    --card-foreground: 210 15% 96%;

    --popover: 220 25% 6%;
    --popover-foreground: 210 15% 96%;

    /* Neon blue primary */
    --primary: 200 100% 55%;
    --primary-foreground: 220 25% 3%;

    /* Muted surfaces */
    --secondary: 220 15% 12%;
    --secondary-foreground: 210 15% 96%;

    --muted: 220 14% 20%;
    --muted-foreground: 215 20% 70%;

    /* Emerald accent */
    --accent: 158 100% 45%;
    --accent-foreground: 220 25% 3%;

    --destructive: 0 84% 60%;
    --destructive-foreground: 210 40% 98%;

    --border: 220 14% 22%;
    --input: 220 14% 22%;
    --ring: 200 100% 55%;

    --radius: 0.75rem;

    /* Sidebar tokens aligned to theme */
    --sidebar-background: 220 22% 6%;
    --sidebar-foreground: 210 15% 92%;
    --sidebar-primary: 200 100% 55%;
    --sidebar-primary-foreground: 220 25% 3%;
    --sidebar-accent: 158 100% 45%;
    --sidebar-accent-foreground: 220 25% 3%;
    --sidebar-border: 220 14% 22%;
    --sidebar-ring: 200 100% 55%;
  }

  /* Keep dark identical to root to ensure consistent dark-first design */
  .dark {
    --background: 220 25% 3%;
    --foreground: 210 15% 96%;

    --card: 220 25% 6%;
    --card-foreground: 210 15% 96%;

    --popover: 220 25% 6%;
    --popover-foreground: 210 15% 96%;

    --primary: 200 100% 55%;
    --primary-foreground: 220 25% 3%;

    --secondary: 220 15% 12%;
    --secondary-foreground: 210 15% 96%;

    --muted: 220 14% 20%;
    --muted-foreground: 215 20% 70%;

    --accent: 158 100% 45%;
    --accent-foreground: 220 25% 3%;

    --destructive: 0 84% 60%;
    --destructive-foreground: 210 40% 98%;

    --border: 220 14% 22%;
    --input: 220 14% 22%;
    --ring: 200 100% 55%;

    --sidebar-background: 220 22% 6%;
    --sidebar-foreground: 210 15% 92%;
    --sidebar-primary: 200 100% 55%;
    --sidebar-primary-foreground: 220 25% 3%;
    --sidebar-accent: 158 100% 45%;
    --sidebar-accent-foreground: 220 25% 3%;
    --sidebar-border: 220 14% 22%;
    --sidebar-ring: 200 100% 55%;
  }
}

@layer base {
  * {
    @apply border-border selection:bg-primary/20 selection:text-foreground;
  }

  html,
  body,
  #root {
    height: 100%;
  }

  body {
    @apply bg-background text-foreground antialiased font-sans;
    cursor:
      url("data:image/svg+xml;utf8,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%3E%3Ccircle%20cx='16'%20cy='16'%20r='7'%20fill='none'%20stroke='%23ffffff'%20stroke-opacity='0.85'%20stroke-width='2'/%3E%3C/svg%3E")
        16 16,
      auto;
  }
  input,
  textarea,
  select {
    cursor: text;
  }
}

/* Prism background inspired by https://reactbits.dev/backgrounds/prism */
@layer utilities {
  .prism-bg {
    background-color: hsl(var(--background));
    background-image:
      radial-gradient(
        800px 400px at 10% 10%,
        rgba(56, 189, 248, 0.18),
        rgba(0, 0, 0, 0) 40%
      ),
      radial-gradient(
        600px 400px at 90% 0%,
        rgba(16, 185, 129, 0.16),
        rgba(0, 0, 0, 0) 42%
      ),
      radial-gradient(
        900px 500px at 50% 110%,
        rgba(59, 130, 246, 0.12),
        rgba(0, 0, 0, 0) 40%
      ),
      linear-gradient(180deg, rgba(0, 0, 0, 0.66), rgba(0, 0, 0, 0.9));
    background-attachment: fixed;
    position: relative;
    overflow: hidden;
  }
  .prism-bg::before {
    content: "";
    position: absolute;
    inset: -2px;
    background: repeating-linear-gradient(
      90deg,
      rgba(255, 255, 255, 0.06) 0px,
      rgba(255, 255, 255, 0.06) 1px,
      rgba(255, 255, 255, 0) 1px,
      rgba(255, 255, 255, 0) 24px
    );
    mask: linear-gradient(
      180deg,
      transparent,
      black 20%,
      black 80%,
      transparent
    );
    pointer-events: none;
    animation: move-grid 18s linear infinite;
  }
  @keyframes move-grid {
    from {
      transform: translateX(0);
    }
    to {
      transform: translateX(-24px);
    }
  }
}

@layer components {
  .glass {
    @apply bg-white/5 dark:bg-white/5 backdrop-blur-xl border border-white/10 shadow-2xl shadow-black/40;
  }
  .btn-neon {
    @apply relative inline-flex items-center justify-center rounded-xl px-5 py-3 font-semibold text-sm tracking-wide transition-all;
    background: linear-gradient(
      90deg,
      hsl(var(--primary)) 0%,
      hsl(var(--accent)) 100%
    );
    color: hsl(var(--primary-foreground));
    box-shadow:
      0 0 0 0 rgba(59, 130, 246, 0),
      0 0 0 0 rgba(16, 185, 129, 0);
  }
  .btn-neon:hover {
    box-shadow:
      0 10px 40px -10px rgba(59, 130, 246, 0.45),
      0 8px 32px -16px rgba(16, 185, 129, 0.4);
    transform: translateY(-1px);
  }
  .btn-neon:active {
    transform: translateY(0px) scale(0.98);
  }

  .btn-outline-neon {
    @apply relative inline-flex items-center justify-center rounded-xl px-5 py-3 font-semibold text-sm tracking-wide transition-all border;
    border-color: hsl(var(--primary));
    color: hsl(var(--foreground));
    background: linear-gradient(
      180deg,
      rgba(255, 255, 255, 0.06),
      rgba(255, 255, 255, 0.02)
    );
  }
  .btn-outline-neon:hover {
    box-shadow:
      inset 0 0 0 999px rgba(59, 130, 246, 0.06),
      0 10px 40px -10px rgba(59, 130, 246, 0.35);
    transform: translateY(-1px);
  }

  .holo {
    @apply relative overflow-hidden rounded-xl border border-white/10;
    background: linear-gradient(
      120deg,
      rgba(59, 130, 246, 0.12),
      rgba(16, 185, 129, 0.12)
    );
  }
  .holo::after {
    content: "";
    @apply absolute inset-0 pointer-events-none;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.35),
      transparent
    );
    transform: translateX(-100%);
    animation: shine 3s linear infinite;
  }

  /* 3D Eye eyelids */
  .eyelid-top,
  .eyelid-bottom {
    @apply absolute left-0 right-0 bg-background/95 backdrop-blur-sm rounded-[999px];
  }
  .eyelid-top {
    top: -2%;
    height: 52%;
    transform: translateY(-100%);
    animation: blinkTop 5s cubic-bezier(0.4, 0, 0.2, 1) infinite;
  }
  .eyelid-bottom {
    bottom: -2%;
    height: 52%;
    transform: translateY(100%);
    animation: blinkBottom 5s cubic-bezier(0.4, 0, 0.2, 1) infinite;
    animation-delay: 20ms;
  }

  @keyframes blinkTop {
    0%,
    92%,
    100% {
      transform: translateY(-100%);
    }
    95% {
      transform: translateY(0%);
    }
  }
  @keyframes blinkBottom {
    0%,
    92%,
    100% {
      transform: translateY(100%);
    }
    95% {
      transform: translateY(0%);
    }
  }

  /* Slow spin utility for iris texture */
  .animate-spin-slower {
    animation: spin 18s linear infinite;
  }
  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }
}

@keyframes shine {
  0% {
    transform: translateX(-100%);
  }
  60% {
    transform: translateX(100%);
  }
  100% {
    transform: translateX(100%);
  }
}
